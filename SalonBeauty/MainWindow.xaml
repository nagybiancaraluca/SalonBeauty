<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SalonBeauty"
        xmlns:AutoLotModel="clr-namespace:AutoLotModel;assembly=AutoLotModel" x:Class="SalonBeauty.MainWindow" mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="customerViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Customer}, CreateList=True}"/>
        <CollectionViewSource x:Key="serviceViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Service}, CreateList=True}"/>
        <CollectionViewSource x:Key="customerAppointmentsViewSource" Source="{Binding Appointments, Source={StaticResource customerViewSource}}"/>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <TabControl x:Name="tbCtrlAutoLot" HorizontalAlignment="Left" Height="380" Margin="221,10,0,0" VerticalAlignment="Top" Width="543">
            <TabItem Header="Customer">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource customerViewSource}" Margin="0,0,-0.4,-13.4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="25*"/>
                        <ColumnDefinition Width="6*"/>
                        <ColumnDefinition Width="148*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="customerDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="37,25,44.02,206" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.ColumnSpan="3">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="custIdColumn" Binding="{Binding custId}" Header="cust Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="firstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="phoneNumberColumn" Binding="{Binding PhoneNumber}" Header="Phone Number" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid1" HorizontalAlignment="Left" Margin="58.4,196,0,0" VerticalAlignment="Top" Grid.Column="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="113.209"/>
                            <ColumnDefinition Width="5.191"/>
                            <ColumnDefinition Width="8.149"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="cust Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="custIdTextBox" IsEnabled="False" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3,4,0,4" Grid.Row="0" Text="{Binding custId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Grid.ColumnSpan="3"/>
                        <Label Content="First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="firstNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3,4,0,4" Grid.Row="1" Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Grid.ColumnSpan="3" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                        <Label Content="Last Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="lastNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3,4,0,4" Grid.Row="2" Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Grid.ColumnSpan="3" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                        <Label Content="Phone Number:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="3" VerticalAlignment="Center"/>
                        <TextBox x:Name="phoneNumberTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3,4,0,4" Grid.Row="3" Text="{Binding PhoneNumber, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Grid.ColumnSpan="3" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                    </Grid>
                    <Button x:Name="btnPrevious" Grid.ColumnSpan="2" Content="Previous" HorizontalAlignment="Left" Margin="18,159,0,0" VerticalAlignment="Top" Width="75" Button.Click="btnPrevious_Click"/>
                    <Button x:Name="btnNext" Content="Next" Grid.Column="2" HorizontalAlignment="Left" Margin="359.2,159,0,0" VerticalAlignment="Top" Width="75" Button.Click="btnNext_Click"/>
                </Grid>
            </TabItem>
            <TabItem Header="Services">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource serviceViewSource}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="16*"/>
                        <ColumnDefinition Width="12*"/>
                        <ColumnDefinition Width="53*"/>
                        <ColumnDefinition Width="456*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="serviceDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="22,23,40.6,202" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.Column="2" Grid.ColumnSpan="2">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="descriptionColumn" Binding="{Binding Description}" Header="Description" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="nameColumn" Binding="{Binding Name}" Header="Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="priceColumn" Binding="{Binding Price}" Header="Price" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="servIdColumn" Binding="{Binding servId}" Header="serv Id" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid2" HorizontalAlignment="Left" Margin="86.8,177,0,0" VerticalAlignment="Top" Grid.Column="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Description:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="descriptionTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding Description, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="nameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding Name, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Price:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="priceTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding Price, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="serv Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="3" VerticalAlignment="Center" />
                        <TextBox x:Name="servIdTextBox" IsEnabled="False" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="3" Text="{Binding servId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                    </Grid>
                    <Button x:Name="btnPrev1" Content="Previous" Grid.Column="2" HorizontalAlignment="Left" Margin="0,152,0,0" VerticalAlignment="Top" Width="75" Button.Click="btnPrev1_Click" Grid.ColumnSpan="2"/>
                    <Button x:Name="btnNext1" Content="Next" Grid.Column="3" HorizontalAlignment="Left" Margin="371.8,152,0,0" VerticalAlignment="Top" Width="75" Button.Click="btnNext1_Click"/>
                </Grid>
            </TabItem>
            <TabItem Header="Appointment">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource customerAppointmentsViewSource}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="28*"/>
                        <ColumnDefinition Width="21*"/>
                        <ColumnDefinition Width="489*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="appointmentsDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" RowDetailsVisibilityMode="VisibleWhenSelected" IsSynchronizedWithCurrentItem="True"  Margin="18,141,9.6,96" Grid.ColumnSpan="3">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="FirstNameColumn" Binding="{Binding FirstName}" Header="FirstName" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="LastNameColumn" Binding="{Binding LastName}" Header="LastName" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="NameColumn" Binding="{Binding Name}" Header="Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="DescriptionColumn" Binding="{Binding Description}" Header="Description" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <ComboBox x:Name="cmbCustomers" HorizontalAlignment="Left" Margin="14.2,74,0,0" VerticalAlignment="Top" Width="120" SelectedValue="{Binding ElementName=appointmentsDataGrid, Path=SelectedItem.custId, Mode=OneWay}" Grid.Column="2">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="FirstName"/>
                                            <Binding Path="LastName"/>
                                            <Binding Path="PhoneNumber"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Label Content="Customers" HorizontalAlignment="Left" Margin="35.2,29,0,0" VerticalAlignment="Top" Height="25" Width="86" Grid.Column="2"/>
                    <ComboBox x:Name="cmbServices" HorizontalAlignment="Left" Margin="301.2,74,0,0" VerticalAlignment="Top" Width="120" SelectedValue="{Binding ElementName=appointmentsDataGrid, Path=SelectedItem.servId, Mode=OneWay}" Grid.Column="2">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1}">
                                            <Binding Path="Name"/>
                                            <Binding Path="Description"/>
                                            <Binding Path="Price"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Label Content="Services" HorizontalAlignment="Left" Margin="326.2,29,0,0" VerticalAlignment="Top" Width="65" RenderTransformOrigin="0.764,0.603" Grid.Column="2"/>

                </Grid>
            </TabItem>
        </TabControl>
        <GroupBox x:Name="gbOperations" Header="" HorizontalAlignment="Left" Height="185" Margin="31,29,0,0" VerticalAlignment="Top" Width="153" RenderTransformOrigin="0.026,0.928" Button.Click="gbOperations_Click">
            <StackPanel x:Name="spOperations" Margin="0,0,-0.2,0.2">
                <Button x:Name="btnNew" Content="New" HorizontalAlignment="Left" Margin="28,10,0,0" VerticalAlignment="Top" Width="75" Button.Click="btnNew_Click"/>
                <Button x:Name="btnEdit" Content="Edit" HorizontalAlignment="Left" Margin="28,25,-0.2,0" VerticalAlignment="Top" Width="75" Button.Click="btnEdit_Click"/>
                <Button x:Name="btnDelete" Content="Delete" HorizontalAlignment="Left" Margin="28,35,0,0" VerticalAlignment="Top" Width="75" RenderTransformOrigin="0.555,1.208" Height="19" Button.Click="btnDelete_Click"/>
            </StackPanel>
        </GroupBox>
        <GroupBox x:Name="gbActions" Header="" HorizontalAlignment="Left" Height="124" Margin="31,219,0,0" VerticalAlignment="Top" Width="153" >
            <StackPanel x:Name="spActions">
                <Button x:Name="btnSave" Content="Save" HorizontalAlignment="Left" Margin="29,23,0,0" VerticalAlignment="Top" Width="75" RenderTransformOrigin="0.384,0.625 " Button.Click="btnSave_Click">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="IsEnabled" Value="false" />
                            <Style.Triggers>
                                <!--Butonul Save va fi inactiv daca exista erori de validare -->
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=lastNameTextBox, Path=(Validation.HasError)}" Value="false" />
                                        <Condition Binding="{Binding ElementName=firstNameTextBox, Path=(Validation.HasError)}" Value="false" />
                                        <Condition Binding="{Binding ElementName=phoneNumberTextBox, Path=(Validation.HasError)}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="true" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="btnCancel" Content="Cancel" HorizontalAlignment="Left" Margin="29,35,0,0" VerticalAlignment="Top" Width="75" Button.Click="btnCancel_Click"/>
            </StackPanel>
        </GroupBox>


    </Grid>
</Window>
